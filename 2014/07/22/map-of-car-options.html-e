<!DOCTYPE html><html><head><meta charset=utf-8><meta http-equiv=X-UA-Compatible content="IE=edge,chrome=1"><title>Map of Car Options</title><meta name=description content="Go Golang Code Examples programming"><meta name=viewport content="width=device-width"><link rel="shortcut icon" href=/favicon.ico type=image/x-icon><link rel=icon href=/favicon.ico type=image/x-icon><link rel=stylesheet href=/golang-code-examples/styles/main.d9bf.css><script src=https://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js></script><!--[if lt IE 9]>
    <script src="//html5shiv.googlecode.com/svn/trunk/html5.js"></script>
    <![endif]--><meta name=viewport content="width=device-width, initial-scale=1, user-scalable=no"><script>(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
            (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
                m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
        })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

        ga('create', 'UA-53073815-1', 'auto');
        ga('send', 'pageview');</script></head><body><div id=dialogoverlay class=dialogoverlay></div><div id=dialogbox class=dialogbox><div><div id=dialogboxhead class=dialogboxhead></div><div id=dialogboxbody class=dialogboxbody></div><div id=dialogboxfoot class=dialogboxfoot></div></div></div><div class=site><header><h1><a class=home-link href="/golang-code-examples">Golang Code Examples</a></h1></header><div id=banner><span id=logo></span> <a href=https://github.com/l3x/golang-code-examples class="button fork"><strong>View On GitHub</strong></a><div class=downloads><span>Downloads:</span><ul><li><a href=https://github.com/l3x/golang-code-examples/zipball/master class=button>ZIP</a></li><li><a href=https://github.com/l3x/golang-code-examples/tarball/master class=button>TAR</a></li></ul></div></div><!-- end banner --><div class=wrapper><nav><ul></ul></nav><div class=page-title><h2>Map of Car Options</h2><p class=meta>22 Jul 2014</p></div><div class=post><section><h2>Description</h2><p>This example demonstrates how to initialize a set of <strong>Car</strong> structs:</p><div class=highlight><pre><code class="go language-go" data-lang=go><span class=kd>type</span> <span class=nx>Car</span> <span class=kd>struct</span> <span class=p>{</span>
    <span class=nx>Make</span>  <span class=kt>string</span>
    <span class=nx>Model</span>  <span class=kt>string</span>
    <span class=nx>Options</span> <span class=p>[]</span><span class=kt>string</span>
<span class=p>}</span>
</code></pre></div><p>Each <strong>Car</strong> has a <strong>Make</strong>, <strong>Model</strong> and a slice of <strong>Options</strong>.</p><p>Next, we create a map to associate <strong>Options</strong>, such as &quot;Allow Wheels&quot;, with each car:</p><div class=highlight><pre><code class="go language-go" data-lang=go><span class=nx>car_options</span> <span class=o>:=</span> <span class=nb>make</span><span class=p>(</span><span class=kd>map</span><span class=p>[</span><span class=kt>string</span><span class=p>][]</span><span class=o>*</span><span class=nx>Car</span><span class=p>)</span>
<span class=p>}</span>
</code></pre></div><p>We iterate over the <strong>Car</strong> structs using the <strong>range</strong> keyword in order to populate the map, thereby associating the current <strong>car</strong> with it&#39;s <strong>Options</strong>.</p><p>Finally, we illustrate various methods of manipulating the map of <strong>Options</strong> for reporting purposes.</p><hr><h2>Golang Features</h2><p>This golang code sample demonstrates the following go language features:</p><ul><li>map of slices</li><li>initializing slices</li><li>iterating ranges</li><li>pointers</li><li>struct</li><li>string package</li></ul><hr><h2>Code Example</h2><div class=highlight><pre><code class="go language-go" data-lang=go><span class=kn>package</span> <span class=nx>main</span>

<span class=kn>import</span> <span class=p>(</span>
    <span class=s>&quot;fmt&quot;</span>
    <span class=s>&quot;strings&quot;</span>
<span class=p>)</span>

<span class=kd>type</span> <span class=nx>Car</span> <span class=kd>struct</span> <span class=p>{</span>
    <span class=nx>Make</span>  <span class=kt>string</span>
    <span class=nx>Model</span>  <span class=kt>string</span>
    <span class=nx>Options</span> <span class=p>[]</span><span class=kt>string</span>
<span class=p>}</span>

<span class=kd>func</span> <span class=nx>main</span><span class=p>()</span> <span class=p>{</span>

    <span class=nx>dashes</span> <span class=o>:=</span> <span class=nx>strings</span><span class=p>.</span><span class=nx>Repeat</span><span class=p>(</span><span class=s>&quot;-&quot;</span><span class=p>,</span> <span class=mi>50</span><span class=p>)</span>

    <span class=nx>is250</span> <span class=o>:=</span> <span class=o>&amp;</span><span class=nx>Car</span><span class=p>{</span><span class=s>&quot;Lexus&quot;</span><span class=p>,</span> <span class=s>&quot;IS250&quot;</span><span class=p>,</span> <span class=p>[]</span><span class=kt>string</span><span class=p>{</span><span class=s>&quot;GPS&quot;</span><span class=p>,</span> <span class=s>&quot;Alloy Wheels&quot;</span><span class=p>,</span> <span class=s>&quot;Roof Rack&quot;</span><span class=p>,</span> <span class=s>&quot;Power Outlets&quot;</span><span class=p>,</span> <span class=s>&quot;Heated Seats&quot;</span><span class=p>}}</span>
    <span class=nx>accord</span> <span class=o>:=</span> <span class=o>&amp;</span><span class=nx>Car</span><span class=p>{</span><span class=s>&quot;Honda&quot;</span><span class=p>,</span> <span class=s>&quot;Accord&quot;</span><span class=p>,</span> <span class=p>[]</span><span class=kt>string</span><span class=p>{</span><span class=s>&quot;Alloy Wheels&quot;</span><span class=p>,</span> <span class=s>&quot;Roof Rack&quot;</span><span class=p>}}</span>
    <span class=nx>blazer</span> <span class=o>:=</span> <span class=o>&amp;</span><span class=nx>Car</span><span class=p>{</span><span class=s>&quot;Chevy&quot;</span><span class=p>,</span> <span class=s>&quot;Blazer&quot;</span><span class=p>,</span> <span class=p>[]</span><span class=kt>string</span><span class=p>{</span><span class=s>&quot;GPS&quot;</span><span class=p>,</span> <span class=s>&quot;Roof Rack&quot;</span><span class=p>,</span> <span class=s>&quot;Power Outlets&quot;</span><span class=p>}}</span>

    <span class=nx>cars</span> <span class=o>:=</span> <span class=p>[]</span><span class=o>*</span><span class=nx>Car</span><span class=p>{</span><span class=nx>is250</span><span class=p>,</span> <span class=nx>accord</span><span class=p>,</span> <span class=nx>blazer</span><span class=p>}</span>
    <span class=nx>fmt</span><span class=p>.</span><span class=nx>Printf</span><span class=p>(</span><span class=s>&quot;Cars:\n%v\n\n&quot;</span><span class=p>,</span> <span class=nx>cars</span><span class=p>)</span>  <span class=c1>// cars is a slice of pointers to our three cars</span>

    <span class=c1>// Create a map to associate options with each car</span>
    <span class=nx>car_options</span> <span class=o>:=</span> <span class=nb>make</span><span class=p>(</span><span class=kd>map</span><span class=p>[</span><span class=kt>string</span><span class=p>][]</span><span class=o>*</span><span class=nx>Car</span><span class=p>)</span>

    <span class=nx>fmt</span><span class=p>.</span><span class=nx>Printf</span><span class=p>(</span><span class=s>&quot;CARS:\n%s\n&quot;</span><span class=p>,</span> <span class=nx>dashes</span><span class=p>)</span>
    <span class=k>for</span> <span class=nx>_</span><span class=p>,</span> <span class=nx>car</span> <span class=o>:=</span> <span class=k>range</span> <span class=nx>cars</span> <span class=p>{</span>
        <span class=nx>fmt</span><span class=p>.</span><span class=nx>Printf</span><span class=p>(</span><span class=s>&quot;%v\n&quot;</span><span class=p>,</span> <span class=nx>car</span><span class=p>)</span>
        <span class=k>for</span> <span class=nx>_</span><span class=p>,</span> <span class=nx>option</span> <span class=o>:=</span> <span class=k>range</span> <span class=nx>car</span><span class=p>.</span><span class=nx>Options</span> <span class=p>{</span>
            <span class=c1>// Associate this car with each of it&#39;s options</span>
            <span class=nx>car_options</span><span class=p>[</span><span class=nx>option</span><span class=p>]</span> <span class=p>=</span> <span class=nb>append</span><span class=p>(</span><span class=nx>car_options</span><span class=p>[</span><span class=nx>option</span><span class=p>],</span> <span class=nx>car</span><span class=p>)</span>
            <span class=nx>fmt</span><span class=p>.</span><span class=nx>Printf</span><span class=p>(</span><span class=s>&quot;car_options[option]: %s\n&quot;</span><span class=p>,</span> <span class=nx>option</span><span class=p>)</span>
        <span class=p>}</span>
        <span class=nx>fmt</span><span class=p>.</span><span class=nx>Println</span><span class=p>(</span><span class=nx>dashes</span><span class=p>)</span>
    <span class=p>}</span>
    <span class=nx>fmt</span><span class=p>.</span><span class=nx>Println</span><span class=p>(</span><span class=nx>dashes</span><span class=p>)</span>

    <span class=c1>// Print a list of cars with the &quot;GPS&quot; option</span>
    <span class=k>for</span> <span class=nx>_</span><span class=p>,</span> <span class=nx>p</span> <span class=o>:=</span> <span class=k>range</span> <span class=nx>car_options</span><span class=p>[</span><span class=s>&quot;GPS&quot;</span><span class=p>]</span> <span class=p>{</span>
        <span class=nx>fmt</span><span class=p>.</span><span class=nx>Println</span><span class=p>(</span><span class=nx>p</span><span class=p>.</span><span class=nx>Make</span><span class=p>,</span> <span class=s>&quot;has GPS.&quot;</span><span class=p>)</span>
    <span class=p>}</span>

    <span class=nx>fmt</span><span class=p>.</span><span class=nx>Println</span><span class=p>(</span><span class=s>&quot;&quot;</span><span class=p>)</span>
    <span class=nx>fmt</span><span class=p>.</span><span class=nx>Println</span><span class=p>(</span><span class=nb>len</span><span class=p>(</span><span class=nx>car_options</span><span class=p>[</span><span class=s>&quot;Alloy Wheels&quot;</span><span class=p>]),</span> <span class=s>&quot;has Alloy Wheels.&quot;</span><span class=p>)</span>
<span class=p>}</span>
</code></pre></div><hr><h2>Notes</h2><p>We could have associated each car with each of it&#39;s options as follows:</p><div class=highlight><pre><code class="go language-go" data-lang=go><span class=nx>car_options</span><span class=p>[</span><span class=s>&quot;GPS&quot;</span><span class=p>]</span> <span class=p>=</span> <span class=p>[]</span><span class=o>*</span><span class=nx>Car</span><span class=p>{</span><span class=nx>is250</span><span class=p>,</span> <span class=nx>blazer</span><span class=p>}</span>
<span class=nx>car_options</span><span class=p>[</span><span class=s>&quot;Alloy Wheels&quot;</span><span class=p>]</span> <span class=p>=</span> <span class=p>[]</span><span class=o>*</span><span class=nx>Car</span><span class=p>{</span><span class=nx>is250</span><span class=p>,</span> <span class=nx>accord</span><span class=p>,</span> <span class=nx>blazer</span><span class=p>}</span>
<span class=nx>car_options</span><span class=p>[</span><span class=s>&quot;Roof Rack&quot;</span><span class=p>]</span> <span class=p>=</span> <span class=p>[]</span><span class=o>*</span><span class=nx>Car</span><span class=p>{</span><span class=nx>is250</span><span class=p>,</span> <span class=nx>accord</span><span class=p>}</span>
<span class=nx>car_options</span><span class=p>[</span><span class=s>&quot;Power Outlets&quot;</span><span class=p>]</span> <span class=p>=</span> <span class=p>[]</span><span class=o>*</span><span class=nx>Car</span><span class=p>{</span><span class=nx>is250</span><span class=p>,</span> <span class=nx>blazer</span><span class=p>}</span>
<span class=nx>car_options</span><span class=p>[</span><span class=s>&quot;Heated Seats&quot;</span><span class=p>]</span> <span class=p>=</span> <span class=p>[]</span><span class=o>*</span><span class=nx>Car</span><span class=p>{</span><span class=nx>is250</span><span class=p>}</span>
</code></pre></div><p>Appending to a nil slice as follows ...</p><p><code>go car_options[option] = append(car_options[option], car)</code></p><p>... just allocates a new slice, so it&#39;s a one-liner to append a value to a map of slices; there&#39;s no need to check if the key exists.</p><hr><h2>Output</h2><div class=highlight><pre><code class="text language-text" data-lang=text>/usr/local/Cellar/go/1.2.2/libexec/bin/go run /Users/lex/dev/go/samples/src/bitbucket.org/l3x/list/cars.go
Cars:
[0x21025b0c0 0x21025b100 0x21025b140]

CARS:
--------------------------------------------------
&amp;{Lexus IS250 [GPS Alloy Wheels Roof Rack Power Outlets Heated Seats]}
car_options[option]: GPS
car_options[option]: Alloy Wheels
car_options[option]: Roof Rack
car_options[option]: Power Outlets
car_options[option]: Heated Seats
--------------------------------------------------
&amp;{Honda Accord [Alloy Wheels Roof Rack]}
car_options[option]: Alloy Wheels
car_options[option]: Roof Rack
--------------------------------------------------
&amp;{Chevy Blazer [GPS Roof Rack Power Outlets]}
car_options[option]: GPS
car_options[option]: Roof Rack
car_options[option]: Power Outlets
--------------------------------------------------
--------------------------------------------------
Lexus has GPS.
Chevy has GPS.

2 has Alloy Wheels.

Process finished with exit code 0
</code></pre></div><hr><h2>References</h2><ul><li><a href=https://github.com/l3x/golang-code-examples>Golang Code Examples</a></li><li><a href="http://golang.org/pkg/strings/#Repeat/">String Package&#39;s Repeat Function</a></li><li><a href=http://blog.golang.org/go-maps-in-action>Maps in Action</a></li><li><a href="http://tour.golang.org/">Golang Tour</a></li></ul></section></div><!-- Add Disqus comments. --><div id=disqus_thread></div><script type=text/javascript>/* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
    var disqus_shortname = 'golang-code-examples'; // required: replace example with your forum shortname

    /* * * DON'T EDIT BELOW THIS LINE * * */
    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();</script><noscript>Please enable JavaScript to view the <a href=http://disqus.com/?ref_noscript>comments powered by Disqus.</a></noscript><a href=http://disqus.com class=dsq-brlink>comments powered by <span class=logo-disqus>Disqus</span></a></div><div class=footer><div class=contact><div id=name-gravatar class=float-left><span>By Lex Sheehan</span> <span class=l3x-gravatar></span></div><div class=float-right><strong>It's Go Time!</strong></div></div></div><div class=license-notice>This work is licensed under the <a href="http://creativecommons.org/licenses/by/3.0/">Creative Commons Attribution 3.0 Unported License</a>.</div></div><script src=/golang-code-examples/scripts/scripts.db44.js></script></body></html>
